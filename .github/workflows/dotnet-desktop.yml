name: .NET Core Desktop CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [ Debug, Release ]

    env:
      Solution_Name: TournoisPlanning.sln
      Test_Project_Path: TournoisPlanning.Tests\TournoisPlanning.Tests.csproj
      Wap_Project_Directory: WapProjTM
      Wap_Project_Path: WapProjTM\WapProjTM.wapproj

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: '17.9' # Version exacte du VS sur windows-latest

    - name: Install workload maui-windows
      run: dotnet workload install maui-windows

    - name: Restore workloads
      run: dotnet workload restore

    - name: Restore solution
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=${{ matrix.configuration }}

    - name: Run Unit Tests
      run: dotnet test $env:Test_Project_Path

    - name: Decode PFX Certificate
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
        New-Item -ItemType Directory -Force -Path $env:Wap_Project_Directory | Out-Null
        [IO.File]::WriteAllBytes($certificatePath, $pfx_cert_byte)

    - name: Build and Package App
      run: |
        msbuild $env:Wap_Project_Path `
          /p:Configuration=${{ matrix.configuration }} `
          /p:UapAppxPackageBuildMode=StoreUpload `
          /p:AppxBundle=Always `
          /p:AppxBundlePlatforms="x86|x64" `
          /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx `
          /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}

    - name: Upload MSIX Package
      uses: actions/upload-artifact@v4
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages

    - name: Clean up certificate
      run: Remove-Item $env:Wap_Project_Directory\GitHubActionsWorkflow.pfx -Force

    - name: Setup MySQL
      run: |
        choco install mysql -y
        net start mysql
      shell: cmd

    - name: Configure MySQL
      run: |
        mysql -u root -e "CREATE USER 'adminTM'@'localhost' IDENTIFIED BY '${{ secrets.MYSQL_TM_PASSWORD }}';"
        mysql -u root -e "CREATE DATABASE tournoisManagement;"
        mysql -u root -e "GRANT ALL PRIVILEGES ON tournoisManagement.* TO 'adminTM'@'localhost';"
        mysql -u root -e "FLUSH PRIVILEGES;"
      shell: bash

    - name: Import SQL Structure
      run: |
        mysql -u adminTM -p${{ secrets.MYSQL_TM_PASSWORD }} tournoisManagement < structure_tournoi.sql
      shell: bash
